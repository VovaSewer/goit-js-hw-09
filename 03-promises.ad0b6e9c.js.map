{"version":3,"sources":["js/03-promises.js"],"names":["refs","form","document","querySelector","amount","delay","steps","createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","onFormSubmit","e","preventDefault","value","Number","console","log","then","catch","i","addEventListener"],"mappings":";AACA,MAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,OAAQF,SAASC,cAAc,wBAC/BE,MAAOH,SAASC,cAAc,uBAC9BG,MAAOJ,SAASC,cAAc,uBAIhC,SAASI,EAAcC,EAAUH,GACtB,OAAA,IAAII,QAAQ,CAACC,EAASC,KACrBC,MAAAA,EAAgBC,KAAKC,SAAW,GACtCC,WAAW,KACLH,GACFF,EAAQ,CAAEF,SAAAA,EAAUH,MAAAA,IAEtBM,EAAO,CAAEH,SAAAA,EAAUH,MAAAA,KAClBA,KAIT,SAASW,EAAaC,GACpBA,EAAEC,iBAEEd,IAAAA,EAASJ,EAAKI,OAAOe,MACrBd,EAAQe,OAAOpB,EAAKK,MAAMc,OAC1Bb,EAAQN,EAAKM,MAAMa,MACvBE,QAAQC,IAAK,QAAQjB,GAEnBE,EAAc,EAAGF,GACdkB,KAAK,EAAGf,SAAAA,EAAUH,MAAAA,MACjBgB,QAAQC,2BAA2Bd,QAAeH,UAEnDmB,MAAM,EAAGhB,SAAAA,EAAUH,MAAAA,MAClBgB,QAAQC,+BAA+BjB,UAG3CgB,QAAQC,IAAK,QAAQjB,GAElB,IAAA,IAAIoB,EAAI,EAAGA,GAAKrB,EAAQqB,IAAI,CAC3BpB,IAAAA,EAAQe,OAAOd,EAAQmB,GAC3BJ,QAAQC,IAAK,cAAcjB,GAG3BE,EAAckB,EAAGpB,GAChBkB,KAAK,EAAGf,SAAAA,EAAUH,MAAAA,MACjBgB,QAAQC,2BAA2BG,QAAQpB,UAE5CmB,MAAM,EAAGhB,SAAAA,EAAUH,MAAAA,MAClBgB,QAAQC,0BAA0BG,QAAQpB,WAKhDL,EAAKC,KAAKyB,iBAAiB,SAAUV","file":"03-promises.ad0b6e9c.js","sourceRoot":"../src","sourcesContent":["\nconst refs = {\n  form: document.querySelector('.form'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  steps: document.querySelector('input[name=\"step\"]'),\n};\n\n\nfunction createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } \n        reject({ position, delay });\n      }, delay);\n  });\n}\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n  \n  let amount = refs.amount.value;\n  let delay = Number(refs.delay.value);\n  let steps = refs.steps.value;\n  console.log(`Delay`, delay);\n\n    createPromise(1, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise 1 in ${delay} ms`);\n      });\n\n    console.log(`Delay`, delay);\n\n  for (let i = 2; i <= amount; i++){\n    let delay = Number(steps * i);\n    console.log(`i {i} delay`, delay);\n  \n\n    createPromise(i, delay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${i} in ${delay} ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${i} in ${delay} ms`);\n    });\n  }  \n}\n\nrefs.form.addEventListener('submit', onFormSubmit)"]}